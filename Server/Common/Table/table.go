package Table

// Code generated by genTable/gen.
// DO NOT EDIT.

import (
	"Common/Framework/config"
	"encoding/json"
	"fmt"
	"os"
)

// ParseRow 每个TbConfig结构体需要实现的接口
type ParseRow interface {
	ParseRow(row []string) (buf map[string]interface{}, err error)
}

// 读取json中的表数据
func Loader(file string) (buf []map[string]interface{}, err error) {
	if str, err := os.ReadFile(config.Instance().TableConfig.Path + file); err != nil {
		err = fmt.Errorf("loader table &lt;%s> error: %v", file, err)
		return nil, err
	} else {
		buf = make([]map[string]interface{}, 0)
		if err = json.Unmarshal(str, &buf); err != nil {
			err = fmt.Errorf("loader table &lt;%s> error: %v", file, err)
			return nil, err
		}
		return buf, nil
	}
}

type Tables struct {
	TbConfigItem *TbConfigItem
}

var Table Tables

func (t *Tables) Init() (err error) {
	var buf []map[string]interface{}

	if buf, err = Loader("item.json"); err != nil {
		return
	}
	if t.TbConfigItem, err = NewItemConfig(buf); err != nil {
		return
	}

	return nil
}
